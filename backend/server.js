const express = require('express');
const multer = require('multer');
const pdfParse = require('pdf-parse');
const fs = require('fs');
const axios = require('axios');

const app = express();
const port = 3000;
const upload = multer({ dest: 'uploads/' });

app.use(require('cors')());

app.post('/api/analyze-ebook', upload.single('ebook'), async (req, res) => {
  const filePath = req.file.path;

  try {
    const dataBuffer = fs.readFileSync(filePath);
    const pdfData = await pdfParse(dataBuffer);
    const text = pdfData.text.slice(0, 8000); // tronque long PDF

    const prompt = buildPrompt(text);
    const aiResponse = await callLMStudio(prompt);

    fs.unlinkSync(filePath);
    res.json({ generatedContent: aiResponse });

  } catch (err) {
    console.error(err);
    fs.unlinkSync(filePath);
    res.status(500).json({ error: 'Erreur traitement PDF' });
  }
});

app.listen(port, () => {
  console.log(`‚úÖ Serveur backend en √©coute sur http://localhost:${port}`);
});

function buildPrompt(text) {
    return `
  Tu es une IA √©ducative sp√©cialis√©e dans la r√©daction de contenus p√©dagogiques en fran√ßais parfait (sans fautes de grammaire, conjugaison ou syntaxe).
  
  Voici un extrait de cours √† r√©sumer et transformer :
  
  """
  ${text}
  """
  
  Ta mission :
  
  1. ‚úèÔ∏è R√©dige un r√©sum√© clair, fluide, bien structur√©, en fran√ßais impeccable, de 2 √† 3 phrases.
  2. üß† Cr√©e 3 questions de quiz sous la forme :
     - Q1 : [texte de la question]
       A) ...
       B) ...
       C) ...
       D) ...
       R√©ponse correcte : ...
     - Pas de balises HTML ni de formatage Markdown (pas de \`\`\`scss ni autre).
  3. üí° Donne une astuce ou un point cl√© √† retenir √† la fin, dans une phrase concise et bien r√©dig√©e.
  
  Ne num√©rote pas les grandes sections (R√©sum√©, Quiz, Astuce), mais commence directement par le texte, dans cet ordre :
  
  R√©sum√©  
  Questions de quiz  
  Astuce
  
  Respecte imperativement les retours √† la ligne pour faciliter la lecture, d'abord, le r√©sum√© du cours, ensuite retour a ligne, les quiz, et enfin retour a ligne, l'astuce.
  `;
  }
  

async function callLMStudio(prompt) {
  try {
    const response = await axios.post('http://127.0.0.1:1234/v1/chat/completions', {
      model: "local-model", // nom par d√©faut dans LM Studio
      messages: [
        { role: "system", content: "Tu es un assistant p√©dagogique." },
        { role: "user", content: prompt }
      ],
      temperature: 0.7,
      max_tokens: 1000
    });

    return response.data.choices[0].message.content;
  } catch (error) {
    console.error('‚ùå Erreur appel LM Studio :', error);
    return 'Erreur IA';
  }
}
